from flask import Blueprint, request, jsonify
import requests
from flask_jwt_extended import jwt_required
import logging

# Set up logging
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

roadmap_bp = Blueprint('roadmap', __name__)

# DeepSeek API configuration (using Novita AI OpenAI-compatible endpoint)
DEEPSEEK_API_URL = "https://api.novita.ai/v3/openai/chat/completions"
DEEPSEEK_API_KEY = "sk_iTKUcyR1a6wno7ZIKrIu_i6Sn51WFHVhdWpGTMduC4k"
DEEPSEEK_MODEL = "deepseek/deepseek-r1-turbo"

# Function to call DeepSeek API to generate a career roadmap
def generate_roadmap_with_deepseek(career):
    headers = {
        "Authorization": f"Bearer {DEEPSEEK_API_KEY}",
        "Content-Type": "application/json"
    }

    # Optimized prompt for a concise, structured roadmap
    prompt = (
        f"Generate a career roadmap for a {career} in a structured format. "
        f"List 5-8 main categories with 3-6 subtopics each. Format the response as follows:\n"
        f"- Category: <Category Name>\n  Subtopics: <Subtopic 1>, <Subtopic 2>, <Subtopic 3>\n"
        f"For example, for a Front-End Developer:\n"
        f"- Category: Internet\n  Subtopics: How does the Internet work?, What is HTTP?, What is Domain Name?\n"
        f"- Category: HTML\n  Subtopics: Learn the basics, Writing Semantic HTML, Forms and Validations\n"
        f"Provide the roadmap for the career: {career}."
    )

    # Payload for the DeepSeek API (OpenAI-compatible format)
    payload = {
        "model": DEEPSEEK_MODEL,
        "messages": [
            {"role": "system", "content": "You are a career roadmap generator. Provide concise and structured roadmaps for various careers."},
            {"role": "user", "content": prompt}
        ],
        "max_tokens": 500,  # Reduced to speed up the response
        "temperature": 0.7
    }

    try:
        # Make the API request with a 5-second timeout
        response = requests.post(DEEPSEEK_API_URL, json=payload, headers=headers, timeout=5)
        response.raise_for_status()  # Raise an error for bad status codes

        # Log the raw response for debugging
        logger.info(f"DeepSeek API response: {response.text}")

        # Parse the response (OpenAI-compatible format)
        result = response.json()
        roadmap_text = result["choices"][0]["message"]["content"].strip()

        # Parse the roadmap text into a structured JSON format
        roadmap = parse_roadmap_text(roadmap_text)
        if not roadmap:  # If the parsed roadmap is empty, use the fallback
            logger.warning("Empty roadmap generated by DeepSeek API, using fallback")
            return fallback_roadmap(career)
        return roadmap
    except Exception as e:
        logger.error(f"Error with DeepSeek API: {str(e)}")
        return fallback_roadmap(career)

# Function to parse the DeepSeek API response into a structured JSON format
def parse_roadmap_text(roadmap_text):
    roadmap = []
    lines = roadmap_text.split("\n")
    current_category = None

    for line in lines:
        line = line.strip()
        if not line:
            continue

        # Check if the line defines a category
        if line.startswith("- Category:"):
            if current_category is not None:
                roadmap.append(current_category)
            category_name = line.replace("- Category:", "").strip()
            current_category = {"category": category_name, "subtopics": []}
        # Check if the line defines subtopics
        elif line.startswith("Subtopics:") and current_category is not None:
            subtopics = line.replace("Subtopics:", "").strip()
            if subtopics:
                current_category["subtopics"] = [subtopic.strip() for subtopic in subtopics.split(",")]
        # Handle cases where subtopics might be on a new line with a dash
        elif line.startswith("-") and current_category is not None:
            subtopic = line.replace("-", "").strip()
            if subtopic:
                current_category["subtopics"].append(subtopic)

    # Add the last category if it exists
    if current_category is not None:
        roadmap.append(current_category)

    return roadmap

# Fallback roadmap in case the DeepSeek API fails (hardcoded for multiple careers)
def fallback_roadmap(career):
    logger.info(f"Using fallback roadmap for career: {career}")
    career = career.lower()

    # Roadmap for Front-End Developer (matches the image)
    if career == "front-end developer":
        return [
            {
                "category": "Internet",
                "subtopics": [
                    "How does the Internet work?",
                    "What is HTTP?",
                    "What is Domain Name?",
                    "What is Hosting?",
                    "DNS and how it works?",
                    "Browsers and how they work?"
                ]
            },
            {
                "category": "HTML",
                "subtopics": [
                    "Learn the basics",
                    "Writing Semantic HTML",
                    "Forms and Validations",
                    "Accessibility",
                    "SEO Basics"
                ]
            },
            {
                "category": "CSS",
                "subtopics": [
                    "Learn the basics",
                    "Making Layouts",
                    "Responsive Design"
                ]
            },
            {
                "category": "JavaScript",
                "subtopics": [
                    "Learn the basics",
                    "Learn DOM Manipulation",
                    "Fetch API / Ajax (XHR)"
                ]
            },
            {
                "category": "Version Control Systems",
                "subtopics": [
                    "Git",
                    "GitHub"
                ]
            },
            {
                "category": "Package Managers",
                "subtopics": [
                    "npm",
                    "yarn"
                ]
            },
            {
                "category": "Pick a Framework",
                "subtopics": [
                    "React",
                    "Vue.js",
                    "Angular",
                    "Svelte",
                    "Solid JS",
                    "Qwik"
                ]
            },
            {
                "category": "Writing CSS",
                "subtopics": [
                    "Tailwind",
                    "BEM",
                    "CSS Architecture",
                    "CSS Preprocessors (Sass, PostCSS, Prettier)"
                ]
            },
            {
                "category": "Build Tools",
                "subtopics": [
                    "Vite",
                    "esbuild",
                    "Webpack",
                    "Rollup",
                    "Parcel",
                    "Vitest",
                    "Jest"
                ]
            },
            {
                "category": "Web Security Basics",
                "subtopics": [
                    "CORS",
                    "HTTPS",
                    "Content Security Policy",
                    "OWASP Security Risks"
                ]
            },
            {
                "category": "Authentication Strategies",
                "subtopics": [
                    "JWT, OAuth, SSO",
                    "Basic Auth",
                    "Session Auth"
                ]
            },
            {
                "category": "Type Checkers",
                "subtopics": [
                    "TypeScript"
                ]
            },
            {
                "category": "SSR (Server-Side Rendering)",
                "subtopics": [
                    "Next.js",
                    "Nuxt.js",
                    "Astro",
                    "React Router",
                    "Vue.js",
                    "Svelte",
                    "SvelteKit"
                ]
            },
            {
                "category": "GraphQL",
                "subtopics": [
                    "Apollo",
                    "Relay Modern"
                ]
            },
            {
                "category": "Static Site Generators",
                "subtopics": [
                    "Next.js",
                    "Vuepress",
                    "Astro",
                    "Flutter",
                    "Eleventy",
                    "Ionic"
                ]
            },
            {
                "category": "Measure & Improve Performance",
                "subtopics": [
                    "PRPL Pattern",
                    "RAIL Model",
                    "Performance Metrics",
                    "Using Lighthouse",
                    "Using DevTools"
                ]
            },
            {
                "category": "Testing",
                "subtopics": [
                    "Playwright",
                    "Cypress"
                ]
            },
            {
                "category": "Mobile Apps",
                "subtopics": [
                    "React Native",
                    "Flutter",
                    "Ionic"
                ]
            }
        ]
    
    # Roadmap for Back-End Developer
    elif career == "back-end developer":
        return [
            {
                "category": "Internet",
                "subtopics": [
                    "How does the Internet work?",
                    "What is HTTP?",
                    "What is an API?",
                    "REST vs SOAP",
                    "DNS and how it works?"
                ]
            },
            {
                "category": "Programming Basics",
                "subtopics": [
                    "Choose a language (Python, Java, Node.js, Ruby, Go)",
                    "Learn syntax and fundamentals",
                    "Understand data structures",
                    "Learn algorithms"
                ]
            },
            {
                "category": "Databases",
                "subtopics": [
                    "Learn SQL (MySQL, PostgreSQL)",
                    "Understand NoSQL (MongoDB, Cassandra)",
                    "Database design and normalization",
                    "Indexing and optimization"
                ]
            },
            {
                "category": "Version Control Systems",
                "subtopics": [
                    "Git",
                    "GitHub",
                    "Branching and merging strategies"
                ]
            },
            {
                "category": "Backend Frameworks",
                "subtopics": [
                    "Express.js (Node.js)",
                    "Django (Python)",
                    "Spring Boot (Java)",
                    "Ruby on Rails (Ruby)",
                    "Fiber (Go)"
                ]
            },
            {
                "category": "APIs and Authentication",
                "subtopics": [
                    "REST API design",
                    "GraphQL",
                    "JWT, OAuth, SSO",
                    "API security best practices"
                ]
            },
            {
                "category": "Web Servers",
                "subtopics": [
                    "Nginx",
                    "Apache",
                    "Load balancing",
                    "Reverse proxies"
                ]
            },
            {
                "category": "Deployment and DevOps",
                "subtopics": [
                    "Docker",
                    "Kubernetes",
                    "CI/CD pipelines (Jenkins, GitHub Actions)",
                    "Cloud providers (AWS, Azure, GCP)"
                ]
            },
            {
                "category": "Testing",
                "subtopics": [
                    "Unit testing",
                    "Integration testing",
                    "Mocking",
                    "Tools (Jest, Mocha, PyTest)"
                ]
            },
            {
                "category": "Performance and Security",
                "subtopics": [
                    "Caching (Redis, Memcached)",
                    "Rate limiting",
                    "OWASP security practices",
                    "Monitoring and logging"
                ]
            }
        ]
    
    # Roadmap for Data Scientist
    elif career == "data scientist":
        return [
            {
                "category": "Mathematics and Statistics",
                "subtopics": [
                    "Linear algebra",
                    "Calculus",
                    "Probability and statistics",
                    "Hypothesis testing"
                ]
            },
            {
                "category": "Programming",
                "subtopics": [
                    "Python (NumPy, Pandas)",
                    "R",
                    "SQL",
                    "Version control (Git)"
                ]
            },
            {
                "category": "Data Wrangling",
                "subtopics": [
                    "Data cleaning",
                    "Handling missing data",
                    "Data transformation",
                    "ETL processes"
                ]
            },
            {
                "category": "Data Visualization",
                "subtopics": [
                    "Matplotlib",
                    "Seaborn",
                    "Tableau",
                    "Power BI"
                ]
            },
            {
                "category": "Machine Learning",
                "subtopics": [
                    "Supervised learning (regression, classification)",
                    "Unsupervised learning (clustering, PCA)",
                    "Scikit-learn",
                    "TensorFlow or PyTorch"
                ]
            },
            {
                "category": "Big Data Tools",
                "subtopics": [
                    "Hadoop",
                    "Spark",
                    "Kafka",
                    "Data pipelines"
                ]
            },
            {
                "category": "Deployment and Production",
                "subtopics": [
                    "Model deployment (Flask, FastAPI)",
                    "Cloud platforms (AWS, GCP)",
                    "Monitoring models",
                    "A/B testing"
                ]
            }
        ]
    
    # Roadmap for Full-Stack Developer
    elif career == "full-stack developer":
        return [
            {
                "category": "Internet",
                "subtopics": [
                    "How does the Internet work?",
                    "What is HTTP?",
                    "What is an API?",
                    "DNS and how it works?"
                ]
            },
            {
                "category": "Front-End Basics",
                "subtopics": [
                    "HTML",
                    "CSS",
                    "JavaScript",
                    "Responsive design"
                ]
            },
            {
                "category": "Front-End Frameworks",
                "subtopics": [
                    "React",
                    "Vue.js",
                    "Angular",
                    "State management (Redux, Vuex)"
                ]
            },
            {
                "category": "Back-End Basics",
                "subtopics": [
                    "Choose a language (Node.js, Python, Java)",
                    "Learn syntax and fundamentals",
                    "Understand REST APIs"
                ]
            },
            {
                "category": "Databases",
                "subtopics": [
                    "SQL (MySQL, PostgreSQL)",
                    "NoSQL (MongoDB)",
                    "Database design"
                ]
            },
            {
                "category": "Version Control Systems",
                "subtopics": [
                    "Git",
                    "GitHub",
                    "Branching strategies"
                ]
            },
            {
                "category": "Deployment",
                "subtopics": [
                    "Docker",
                    "Cloud providers (AWS, Azure)",
                    "CI/CD pipelines",
                    "Nginx"
                ]
            },
            {
                "category": "Testing and Security",
                "subtopics": [
                    "Unit testing",
                    "Integration testing",
                    "OWASP security practices",
                    "Authentication (JWT, OAuth)"
                ]
            }
        ]
    
    # Roadmap for Healthcare IT Specialist
    elif career == "healthcare it specialist":
        return [
            {
                "category": "Healthcare Fundamentals",
                "subtopics": [
                    "Understand healthcare workflows",
                    "Learn medical terminology",
                    "Study healthcare regulations (HIPAA, GDPR)",
                    "Overview of healthcare systems"
                ]
            },
            {
                "category": "IT Basics",
                "subtopics": [
                    "Networking fundamentals",
                    "Operating systems (Windows, Linux)",
                    "Basic scripting (Python, PowerShell)",
                    "IT support and troubleshooting"
                ]
            },
            {
                "category": "Healthcare IT Systems",
                "subtopics": [
                    "Electronic Health Records (EHR) systems (Epic, Cerner)",
                    "Health Information Exchange (HIE)",
                    "Picture Archiving and Communication Systems (PACS)",
                    "Telemedicine platforms"
                ]
            },
            {
                "category": "Data Management",
                "subtopics": [
                    "SQL for healthcare data",
                    "Data integration and interoperability",
                    "HL7 and FHIR standards",
                    "Data privacy and security"
                ]
            },
            {
                "category": "Cybersecurity in Healthcare",
                "subtopics": [
                    "HIPAA compliance",
                    "Risk assessments",
                    "Encryption and secure data transfer",
                    "Incident response in healthcare"
                ]
            },
            {
                "category": "Project Management",
                "subtopics": [
                    "Agile and Scrum methodologies",
                    "Healthcare IT project lifecycle",
                    "Stakeholder communication",
                    "Change management"
                ]
            },
            {
                "category": "Emerging Technologies",
                "subtopics": [
                    "AI in healthcare",
                    "IoT in medical devices",
                    "Cloud computing in healthcare",
                    "Blockchain for health records"
                ]
            }
        ]
    
    # Roadmap for Information Security Analyst
    elif career == "information security analyst":
        return [
            {
                "category": "Networking Basics",
                "subtopics": [
                    "TCP/IP and OSI model",
                    "Firewalls and VPNs",
                    "Network protocols (HTTP, DNS, FTP)",
                    "Packet analysis (Wireshark)"
                ]
            },
            {
                "category": "Operating Systems",
                "subtopics": [
                    "Linux security",
                    "Windows security",
                    "File system permissions",
                    "System hardening"
                ]
            },
            {
                "category": "Cybersecurity Fundamentals",
                "subtopics": [
                    "CIA triad (Confidentiality, Integrity, Availability)",
                    "Common vulnerabilities (OWASP Top 10)",
                    "Threat modeling",
                    "Risk management"
                ]
            },
            {
                "category": "Security Tools",
                "subtopics": [
                    "SIEM (Splunk, ELK Stack)",
                    "Intrusion Detection Systems (Snort, Suricata)",
                    "Vulnerability scanners (Nessus, OpenVAS)",
                    "Penetration testing tools (Metasploit)"
                ]
            },
            {
                "category": "Incident Response",
                "subtopics": [
                    "Incident handling process",
                    "Log analysis",
                    "Forensic analysis",
                    "Malware analysis basics"
                ]
            },
            {
                "category": "Compliance and Standards",
                "subtopics": [
                    "ISO 27001",
                    "NIST Cybersecurity Framework",
                    "GDPR and data protection",
                    "PCI DSS"
                ]
            },
            {
                "category": "Certifications",
                "subtopics": [
                    "CompTIA Security+",
                    "Certified Information Systems Security Professional (CISSP)",
                    "Certified Information Security Manager (CISM)",
                    "GIAC Security Essentials (GSEC)"
                ]
            }
        ]
    
    # Roadmap for Ethical Hacker
    elif career == "ethical hacker":
        return [
            {
                "category": "Networking Basics",
                "subtopics": [
                    "TCP/IP and OSI model",
                    "Subnetting and IP addressing",
                    "Network protocols (HTTP, DNS, SSH)",
                    "Packet sniffing (Wireshark)"
                ]
            },
            {
                "category": "Operating Systems",
                "subtopics": [
                    "Linux (Kali Linux, Parrot OS)",
                    "Windows command line",
                    "File system security",
                    "Privilege escalation techniques"
                ]
            },
            {
                "category": "Cybersecurity Fundamentals",
                "subtopics": [
                    "Common vulnerabilities (OWASP Top 10)",
                    "Exploitation techniques",
                    "Social engineering",
                    "Phishing attacks"
                ]
            },
            {
                "category": "Penetration Testing Tools",
                "subtopics": [
                    "Metasploit",
                    "Nmap",
                    "Burp Suite",
                    "SQLmap"
                ]
            },
            {
                "category": "Web Application Security",
                "subtopics": [
                    "SQL injection",
                    "Cross-Site Scripting (XSS)",
                    "Cross-Site Request Forgery (CSRF)",
                    "Insecure API testing"
                ]
            },
            {
                "category": "Network Security",
                "subtopics": [
                    "Network scanning",
                    "Exploiting network vulnerabilities",
                    "Man-in-the-middle attacks",
                    "Wireless network hacking (WEP, WPA)"
                ]
            },
            {
                "category": "Reporting and Ethics",
                "subtopics": [
                    "Writing penetration test reports",
                    "Legal and ethical considerations",
                    "Responsible disclosure",
                    "Client communication"
                ]
            },
            {
                "category": "Certifications",
                "subtopics": [
                    "Certified Ethical Hacker (CEH)",
                    "Offensive Security Certified Professional (OSCP)",
                    "GIAC Penetration Tester (GPEN)",
                    "CompTIA PenTest+"
                ]
            }
        ]
    
    # Generic fallback for other careers
    else:
        return [
            {
                "category": "General Skills",
                "subtopics": [
                    "Learn about the industry",
                    "Basic communication skills",
                    "Problem-solving"
                ]
            }
        ]

# API endpoint to generate the career roadmap
@roadmap_bp.route('/generate', methods=['POST'])
@jwt_required()  # Protect the endpoint with JWT
def generate_career_roadmap():
    try:
        # Get the predicted career from the request
        data = request.get_json()
        if not data or "career" not in data:
            return jsonify({"error": "No career provided"}), 400

        career = data["career"]

        # Use DeepSeek API to generate the roadmap for the given career
        roadmap = generate_roadmap_with_deepseek(career)

        # Return the roadmap as JSON
        return jsonify({
            "career": career,
            "roadmap": roadmap
        }), 200
    except Exception as e:
        logger.error(f"Error in generate_career_roadmap: {str(e)}")
        return jsonify({"error": "Internal server error", "message": str(e)}), 500